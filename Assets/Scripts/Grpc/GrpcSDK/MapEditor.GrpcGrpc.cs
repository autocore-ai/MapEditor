// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MapEditor.Grpc.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace MapEditor {
  public static partial class MapEditorGrpcService
  {
    static readonly string __ServiceName = "MapEditor.MapEditorGrpcService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MapEditor.Empty> __Marshaller_MapEditor_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MapEditor.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MapEditor.OperateFileAction> __Marshaller_MapEditor_OperateFileAction = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MapEditor.OperateFileAction.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MapEditor.EditMapAction> __Marshaller_MapEditor_EditMapAction = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MapEditor.EditMapAction.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MapEditor.AddElementAction> __Marshaller_MapEditor_AddElementAction = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MapEditor.AddElementAction.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MapEditor.ElementId> __Marshaller_MapEditor_ElementId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MapEditor.ElementId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MapEditor.ElementData> __Marshaller_MapEditor_ElementData = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MapEditor.ElementData.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MapEditor.StringAction> __Marshaller_MapEditor_StringAction = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MapEditor.StringAction.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MapEditor.ModifySharpeAction> __Marshaller_MapEditor_ModifySharpeAction = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MapEditor.ModifySharpeAction.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MapEditor.SetTrafficLightAction> __Marshaller_MapEditor_SetTrafficLightAction = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MapEditor.SetTrafficLightAction.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MapEditor.LogInfo> __Marshaller_MapEditor_LogInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MapEditor.LogInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MapEditor.ElementsTree> __Marshaller_MapEditor_ElementsTree = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MapEditor.ElementsTree.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.Empty, global::MapEditor.OperateFileAction> __Method_SubscribeFileOperation = new grpc::Method<global::MapEditor.Empty, global::MapEditor.OperateFileAction>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeFileOperation",
        __Marshaller_MapEditor_Empty,
        __Marshaller_MapEditor_OperateFileAction);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.Empty, global::MapEditor.EditMapAction> __Method_SubscribeMapEdition = new grpc::Method<global::MapEditor.Empty, global::MapEditor.EditMapAction>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeMapEdition",
        __Marshaller_MapEditor_Empty,
        __Marshaller_MapEditor_EditMapAction);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.Empty, global::MapEditor.AddElementAction> __Method_SubscribeElementAddition = new grpc::Method<global::MapEditor.Empty, global::MapEditor.AddElementAction>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeElementAddition",
        __Marshaller_MapEditor_Empty,
        __Marshaller_MapEditor_AddElementAction);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.Empty, global::MapEditor.ElementId> __Method_SubscribeElementSelected = new grpc::Method<global::MapEditor.Empty, global::MapEditor.ElementId>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeElementSelected",
        __Marshaller_MapEditor_Empty,
        __Marshaller_MapEditor_ElementId);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.Empty, global::MapEditor.ElementData> __Method_SubScribeElementModifier = new grpc::Method<global::MapEditor.Empty, global::MapEditor.ElementData>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubScribeElementModifier",
        __Marshaller_MapEditor_Empty,
        __Marshaller_MapEditor_ElementData);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.Empty, global::MapEditor.StringAction> __Method_SubscribeMapStringAction = new grpc::Method<global::MapEditor.Empty, global::MapEditor.StringAction>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeMapStringAction",
        __Marshaller_MapEditor_Empty,
        __Marshaller_MapEditor_StringAction);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.Empty, global::MapEditor.ModifySharpeAction> __Method_SubscribeModifySharpeAction = new grpc::Method<global::MapEditor.Empty, global::MapEditor.ModifySharpeAction>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubscribeModifySharpeAction",
        __Marshaller_MapEditor_Empty,
        __Marshaller_MapEditor_ModifySharpeAction);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.Empty, global::MapEditor.SetTrafficLightAction> __Method_SubScribeStartSetTrafficLightTarget = new grpc::Method<global::MapEditor.Empty, global::MapEditor.SetTrafficLightAction>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubScribeStartSetTrafficLightTarget",
        __Marshaller_MapEditor_Empty,
        __Marshaller_MapEditor_SetTrafficLightAction);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.AddElementAction, global::MapEditor.Empty> __Method_SetAddingElementType = new grpc::Method<global::MapEditor.AddElementAction, global::MapEditor.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetAddingElementType",
        __Marshaller_MapEditor_AddElementAction,
        __Marshaller_MapEditor_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.LogInfo, global::MapEditor.Empty> __Method_SendLogInfo = new grpc::Method<global::MapEditor.LogInfo, global::MapEditor.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendLogInfo",
        __Marshaller_MapEditor_LogInfo,
        __Marshaller_MapEditor_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.ElementData, global::MapEditor.Empty> __Method_SendElementData = new grpc::Method<global::MapEditor.ElementData, global::MapEditor.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendElementData",
        __Marshaller_MapEditor_ElementData,
        __Marshaller_MapEditor_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MapEditor.ElementsTree, global::MapEditor.Empty> __Method_SendElementTree = new grpc::Method<global::MapEditor.ElementsTree, global::MapEditor.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendElementTree",
        __Marshaller_MapEditor_ElementsTree,
        __Marshaller_MapEditor_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MapEditor.MapEditorGrpcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MapEditorGrpcService</summary>
    [grpc::BindServiceMethod(typeof(MapEditorGrpcService), "BindService")]
    public abstract partial class MapEditorGrpcServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeFileOperation(global::MapEditor.Empty request, grpc::IServerStreamWriter<global::MapEditor.OperateFileAction> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeMapEdition(global::MapEditor.Empty request, grpc::IServerStreamWriter<global::MapEditor.EditMapAction> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeElementAddition(global::MapEditor.Empty request, grpc::IServerStreamWriter<global::MapEditor.AddElementAction> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeElementSelected(global::MapEditor.Empty request, grpc::IServerStreamWriter<global::MapEditor.ElementId> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubScribeElementModifier(global::MapEditor.Empty request, grpc::IServerStreamWriter<global::MapEditor.ElementData> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeMapStringAction(global::MapEditor.Empty request, grpc::IServerStreamWriter<global::MapEditor.StringAction> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubscribeModifySharpeAction(global::MapEditor.Empty request, grpc::IServerStreamWriter<global::MapEditor.ModifySharpeAction> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task SubScribeStartSetTrafficLightTarget(global::MapEditor.Empty request, grpc::IServerStreamWriter<global::MapEditor.SetTrafficLightAction> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MapEditor.Empty> SetAddingElementType(global::MapEditor.AddElementAction request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MapEditor.Empty> SendLogInfo(global::MapEditor.LogInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MapEditor.Empty> SendElementData(global::MapEditor.ElementData request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MapEditor.Empty> SendElementTree(global::MapEditor.ElementsTree request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MapEditorGrpcService</summary>
    public partial class MapEditorGrpcServiceClient : grpc::ClientBase<MapEditorGrpcServiceClient>
    {
      /// <summary>Creates a new client for MapEditorGrpcService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MapEditorGrpcServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MapEditorGrpcService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MapEditorGrpcServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MapEditorGrpcServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MapEditorGrpcServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.OperateFileAction> SubscribeFileOperation(global::MapEditor.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeFileOperation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.OperateFileAction> SubscribeFileOperation(global::MapEditor.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeFileOperation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.EditMapAction> SubscribeMapEdition(global::MapEditor.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeMapEdition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.EditMapAction> SubscribeMapEdition(global::MapEditor.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeMapEdition, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.AddElementAction> SubscribeElementAddition(global::MapEditor.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeElementAddition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.AddElementAction> SubscribeElementAddition(global::MapEditor.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeElementAddition, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.ElementId> SubscribeElementSelected(global::MapEditor.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeElementSelected(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.ElementId> SubscribeElementSelected(global::MapEditor.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeElementSelected, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.ElementData> SubScribeElementModifier(global::MapEditor.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubScribeElementModifier(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.ElementData> SubScribeElementModifier(global::MapEditor.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubScribeElementModifier, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.StringAction> SubscribeMapStringAction(global::MapEditor.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeMapStringAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.StringAction> SubscribeMapStringAction(global::MapEditor.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeMapStringAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.ModifySharpeAction> SubscribeModifySharpeAction(global::MapEditor.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubscribeModifySharpeAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.ModifySharpeAction> SubscribeModifySharpeAction(global::MapEditor.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeModifySharpeAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.SetTrafficLightAction> SubScribeStartSetTrafficLightTarget(global::MapEditor.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubScribeStartSetTrafficLightTarget(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::MapEditor.SetTrafficLightAction> SubScribeStartSetTrafficLightTarget(global::MapEditor.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubScribeStartSetTrafficLightTarget, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MapEditor.Empty SetAddingElementType(global::MapEditor.AddElementAction request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAddingElementType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MapEditor.Empty SetAddingElementType(global::MapEditor.AddElementAction request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetAddingElementType, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MapEditor.Empty> SetAddingElementTypeAsync(global::MapEditor.AddElementAction request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetAddingElementTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MapEditor.Empty> SetAddingElementTypeAsync(global::MapEditor.AddElementAction request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetAddingElementType, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MapEditor.Empty SendLogInfo(global::MapEditor.LogInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendLogInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MapEditor.Empty SendLogInfo(global::MapEditor.LogInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendLogInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MapEditor.Empty> SendLogInfoAsync(global::MapEditor.LogInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendLogInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MapEditor.Empty> SendLogInfoAsync(global::MapEditor.LogInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendLogInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MapEditor.Empty SendElementData(global::MapEditor.ElementData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendElementData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MapEditor.Empty SendElementData(global::MapEditor.ElementData request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendElementData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MapEditor.Empty> SendElementDataAsync(global::MapEditor.ElementData request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendElementDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MapEditor.Empty> SendElementDataAsync(global::MapEditor.ElementData request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendElementData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MapEditor.Empty SendElementTree(global::MapEditor.ElementsTree request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendElementTree(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::MapEditor.Empty SendElementTree(global::MapEditor.ElementsTree request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendElementTree, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MapEditor.Empty> SendElementTreeAsync(global::MapEditor.ElementsTree request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendElementTreeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::MapEditor.Empty> SendElementTreeAsync(global::MapEditor.ElementsTree request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendElementTree, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override MapEditorGrpcServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MapEditorGrpcServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MapEditorGrpcServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SubscribeFileOperation, serviceImpl.SubscribeFileOperation)
          .AddMethod(__Method_SubscribeMapEdition, serviceImpl.SubscribeMapEdition)
          .AddMethod(__Method_SubscribeElementAddition, serviceImpl.SubscribeElementAddition)
          .AddMethod(__Method_SubscribeElementSelected, serviceImpl.SubscribeElementSelected)
          .AddMethod(__Method_SubScribeElementModifier, serviceImpl.SubScribeElementModifier)
          .AddMethod(__Method_SubscribeMapStringAction, serviceImpl.SubscribeMapStringAction)
          .AddMethod(__Method_SubscribeModifySharpeAction, serviceImpl.SubscribeModifySharpeAction)
          .AddMethod(__Method_SubScribeStartSetTrafficLightTarget, serviceImpl.SubScribeStartSetTrafficLightTarget)
          .AddMethod(__Method_SetAddingElementType, serviceImpl.SetAddingElementType)
          .AddMethod(__Method_SendLogInfo, serviceImpl.SendLogInfo)
          .AddMethod(__Method_SendElementData, serviceImpl.SendElementData)
          .AddMethod(__Method_SendElementTree, serviceImpl.SendElementTree).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MapEditorGrpcServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SubscribeFileOperation, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::MapEditor.Empty, global::MapEditor.OperateFileAction>(serviceImpl.SubscribeFileOperation));
      serviceBinder.AddMethod(__Method_SubscribeMapEdition, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::MapEditor.Empty, global::MapEditor.EditMapAction>(serviceImpl.SubscribeMapEdition));
      serviceBinder.AddMethod(__Method_SubscribeElementAddition, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::MapEditor.Empty, global::MapEditor.AddElementAction>(serviceImpl.SubscribeElementAddition));
      serviceBinder.AddMethod(__Method_SubscribeElementSelected, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::MapEditor.Empty, global::MapEditor.ElementId>(serviceImpl.SubscribeElementSelected));
      serviceBinder.AddMethod(__Method_SubScribeElementModifier, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::MapEditor.Empty, global::MapEditor.ElementData>(serviceImpl.SubScribeElementModifier));
      serviceBinder.AddMethod(__Method_SubscribeMapStringAction, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::MapEditor.Empty, global::MapEditor.StringAction>(serviceImpl.SubscribeMapStringAction));
      serviceBinder.AddMethod(__Method_SubscribeModifySharpeAction, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::MapEditor.Empty, global::MapEditor.ModifySharpeAction>(serviceImpl.SubscribeModifySharpeAction));
      serviceBinder.AddMethod(__Method_SubScribeStartSetTrafficLightTarget, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::MapEditor.Empty, global::MapEditor.SetTrafficLightAction>(serviceImpl.SubScribeStartSetTrafficLightTarget));
      serviceBinder.AddMethod(__Method_SetAddingElementType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MapEditor.AddElementAction, global::MapEditor.Empty>(serviceImpl.SetAddingElementType));
      serviceBinder.AddMethod(__Method_SendLogInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MapEditor.LogInfo, global::MapEditor.Empty>(serviceImpl.SendLogInfo));
      serviceBinder.AddMethod(__Method_SendElementData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MapEditor.ElementData, global::MapEditor.Empty>(serviceImpl.SendElementData));
      serviceBinder.AddMethod(__Method_SendElementTree, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MapEditor.ElementsTree, global::MapEditor.Empty>(serviceImpl.SendElementTree));
    }

  }
}
#endregion
